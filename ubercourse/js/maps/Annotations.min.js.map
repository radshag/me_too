{"version":3,"sources":["Annotations.js"],"names":["initAnnotations","init","window","Annotations","root","document","spans","getElementsByClassName","i","len","length","addAnnotationClass","call","onmouseenter","span","wiw","innerWidth","rect","getBoundingClientRect","body","asterisk","offsetHeight","classList","add","remove","right","width"],"mappings":";;;;;;;;;;GAQA,CAAC,CAAC,QAASA,gBAAT,EAA2B,CAC3BC,OACAC,OAAOC,WAAP,CAAqB,CAACF,KAAMA,IAAP,CAArB,CASA,QAASA,KAAT,CAAcG,IAAd,CAAoB,CAClBA,KAAOA,MAAQC,QAAf,CAEA,GAAIC,OAAQF,KAAKG,sBAAL,CAA4B,YAA5B,CAAZ,CAEA,IAAK,GAAIC,GAAI,CAAR,CAAWC,IAAMH,MAAMI,MAA5B,CAAoCF,EAAIC,GAAxC,CAA6CD,GAA7C,CAAkD,CAEhDG,mBAAmBC,IAAnB,CAAwBN,MAAME,CAAN,CAAxB,EAGAF,MAAME,CAAN,EAASK,YAAT,CAAwBF,kBAAxB,CACD,CACF,CAMD,QAASA,mBAAT,EAA8B,CAC5B,GAAIG,MAAO,IAAX,CACA,GAAIC,KAAMb,OAAOc,UAAjB,CACA,GAAIC,MAAOH,KAAKI,qBAAL,EAAX,CACA,GAAIC,MAAOL,KAAKP,sBAAL,CAA4B,kBAA5B,EAAgD,CAAhD,CAAX,CACA,GAAIa,UAAWN,KAAKP,sBAAL,CAA4B,sBAA5B,EAAoD,CAApD,CAAf,CAEA,GAAIa,SAASC,YAAT,CAAwB,GAAxB,CAA8BF,KAAKE,YAAvC,CAAqD,CACnDP,KAAKQ,SAAL,CAAeC,GAAf,CAAmB,iBAAnB,EACD,CAFD,IAEO,CACLT,KAAKQ,SAAL,CAAeE,MAAf,CAAsB,iBAAtB,EACD,CAED,GAAIT,IAAME,KAAKQ,KAAX,CAAmBR,KAAKS,KAA5B,CAAmC,CACjCZ,KAAKQ,SAAL,CAAeC,GAAf,CAAmB,kBAAnB,EACD,CAFD,IAEO,CACLT,KAAKQ,SAAL,CAAeE,MAAf,CAAsB,kBAAtB,EACD,CACF,CACF,CAhDA","file":"../Annotations.min.js","sourcesContent":["/**\r\n * Tests every `.annotation` to see if its `.annotation__note`\r\n * will collide with right edge of window. Adds class\r\n * `-near-right-edge` to the ones that do and removes it\r\n * from the ones that don't.\r\n *\r\n */\r\n\r\n;(function initAnnotations() {\r\n  init();\r\n  window.Annotations = {init: init};\r\n\r\n  /**\r\n   * For each `.annotation` in the document (or in the element \r\n   * `root` if given), calls `addAnnotationClass` and adds a \r\n   * `mouseenter` listener to call it again.\r\n   * \r\n   * @param  {Element} root - Ancestor of the annotations\r\n   */\r\n  function init(root) {\r\n    root = root || document;\r\n\r\n    var spans = root.getElementsByClassName('annotation');\r\n\r\n    for (var i = 0, len = spans.length; i < len; i++) {\r\n      // add classes now\r\n      addAnnotationClass.call(spans[i]);\r\n\r\n      // add classes on mouseenter\r\n      spans[i].onmouseenter = addAnnotationClass;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detects if an annotation is close to the right edge or\r\n   * has a line break, and applies the appropriate class.\r\n   */\r\n  function addAnnotationClass() {\r\n    var span = this;\r\n    var wiw = window.innerWidth;\r\n    var rect = span.getBoundingClientRect();\r\n    var body = span.getElementsByClassName('annotation__body')[0];\r\n    var asterisk = span.getElementsByClassName('annotation__asterisk')[0];\r\n\r\n    if (asterisk.offsetHeight * 1.5 < body.offsetHeight) {\r\n      span.classList.add('-has-line-break');\r\n    } else {\r\n      span.classList.remove('-has-line-break');\r\n    }\r\n\r\n    if (wiw - rect.right < rect.width) {\r\n      span.classList.add('-near-right-edge');\r\n    } else {\r\n      span.classList.remove('-near-right-edge');\r\n    }\r\n  }\r\n})();\r\n"]}