{"version":3,"sources":["V.Timelines.js"],"names":["initTimelines","V","TweenLite","defaultOverwrite","Timelines","addTimeline","isActive","window","matchMedia","matches","resetTimelines","Navigation","currentTimeline","keys","Object","i","iMax","length","elementsSelector","set","clearProps","needsRebuild","resetTimelinesDebounced","_","debounce","addEventListener","id","pagesSelector","builder","tl","TimelineMax","paused","build","buildTimeline","clear","apply","labelNames","getLabelNamesArray","pageIds","replace","split","Pages","timelineId","labelObjects","getLabelsArray","name","push"],"mappings":";;;;;;;;;;GAMA,CAAC,CAAC,QAASA,cAAT,CAAuBC,CAAvB,CAA0B,CAE1BC,UAAUC,gBAAV,CAA6B,MAA7B,CAGAF,EAAEG,SAAF,CAAc,CACZC,YAAaA,WADD,CAEZC,SAAU,CAAC,CAACC,OAAOC,UAAP,CAAkB,mBAAlB,EAAuCC,OAFvC,CAAd,CAMA,QAASC,eAAT,EAA0B,CAExB,GAAIT,EAAEU,UAAN,CAAkB,CAChBV,EAAEU,UAAF,CAAaC,eAAb,CAA+B,IAA/B,CACD,CAGD,GAAIC,MAAOC,OAAOD,IAAP,CAAYZ,EAAEG,SAAd,CAAX,CAEA,IAAK,GAAIW,GAAI,CAAR,CAAWC,KAAOH,KAAKI,MAA5B,CAAoCF,EAAIC,IAAxC,CAA8CD,GAA9C,CAAmD,CAEjD,GAAId,EAAEG,SAAF,CAAYS,KAAKE,CAAL,CAAZ,EAAqBG,gBAAzB,CAA2C,CAEzChB,UAAUiB,GAAV,CAAclB,EAAEG,SAAF,CAAYS,KAAKE,CAAL,CAAZ,EAAqBG,gBAAnC,CAAqD,CAACE,WAAY,KAAb,CAArD,EACAnB,EAAEG,SAAF,CAAYS,KAAKE,CAAL,CAAZ,EAAqBM,YAArB,CAAoC,IAApC,CACD,CACF,CACF,CAEDX,iBAGA,GAAIY,yBAA0BC,EAAEC,QAAF,CAAWd,cAAX,CAA2B,GAA3B,CAA9B,CACAH,OAAOkB,gBAAP,CAAwB,QAAxB,CAAkCH,uBAAlC,EAgBA,QAASjB,YAAT,CAAqBqB,EAArB,CAAyBC,aAAzB,CAAwCT,gBAAxC,CAA0DU,OAA1D,CAAmE,CAGjE,GAAIC,IAAK,GAAIC,YAAJ,CAAgB,CAACC,OAAQ,IAAT,CAAhB,CAAT,CAGA9B,EAAEG,SAAF,CAAYsB,EAAZ,EAAkBG,EAAlB,CACA5B,EAAEG,SAAF,CAAYsB,EAAZ,EAAgBR,gBAAhB,CAAmCA,gBAAnC,CACAjB,EAAEG,SAAF,CAAYsB,EAAZ,EAAgBC,aAAhB,CAAgCA,aAAhC,CACA1B,EAAEG,SAAF,CAAYsB,EAAZ,EAAgBL,YAAhB,CAA+B,IAA/B,CAGApB,EAAEG,SAAF,CAAYsB,EAAZ,EAAgBM,KAAhB,CAAwB,QAASC,cAAT,EAAyB,CAC/CJ,GAAGK,KAAH,GACAN,QAAQO,KAAR,CAAcN,EAAd,EACA5B,EAAEG,SAAF,CAAYsB,EAAZ,EAAgBU,UAAhB,CAA6BC,oBAA7B,CACD,CAJD,CAOA,GAAIC,SAAUX,cAAcY,OAAd,CAAsB,KAAtB,CAA6B,EAA7B,EAAiCC,KAAjC,CAAuC,GAAvC,CAAd,CAGA,IAAK,GAAIzB,GAAI,CAAR,CAAWC,KAAOsB,QAAQrB,MAA/B,CAAuCF,EAAIC,IAA3C,CAAiDD,GAAjD,CAAsD,CACpD,GAAIuB,QAAQvB,CAAR,CAAJ,CAAgB,CACdd,EAAEwC,KAAF,CAAQH,QAAQvB,CAAR,CAAR,EAAoB2B,UAApB,CAAiChB,EAAjC,CACD,CACF,CAED,QAASW,mBAAT,EAA8B,CAE5B,GAAIM,cAAed,GAAGe,cAAH,EAAnB,CACA,GAAI/B,MAAOC,OAAOD,IAAP,CAAY8B,YAAZ,CAAX,CACA,GAAIP,YAAa,EAAjB,CAEA,IAAK,GAAIrB,GAAI,CAAR,CAAWC,KAAOH,KAAKI,MAA5B,CAAoCF,EAAIC,IAAxC,CAA8CD,GAA9C,CAAmD,CACjD,GAAI4B,aAAa9B,KAAKE,CAAL,CAAb,EAAsB8B,IAA1B,CAAgC,CAC9BT,WAAWU,IAAX,CAAgBH,aAAa9B,KAAKE,CAAL,CAAb,EAAsB8B,IAAtC,EACD,CACF,CAED,MAAOT,WAAP,CACD,CACF,CACF,CA7FA,EA6FE7B,OAAON,CA7FT","file":"../V.Timelines.min.js","sourcesContent":["// ====================================\r\n//\r\n//   Timelines\r\n//\r\n// ====================================\r\n\r\n;(function initTimelines(V) {\r\n  // GSAP settings\r\n  TweenLite.defaultOverwrite = 'auto';\r\n\r\n  // Global object\r\n  V.Timelines = {\r\n    addTimeline: addTimeline,\r\n    isActive: !!window.matchMedia('(min-width: 30em)').matches\r\n  };\r\n\r\n  // Reset Timelines, for initialization and window resize\r\n  function resetTimelines() {\r\n    // clear `currentTimeline`\r\n    if (V.Navigation) {\r\n      V.Navigation.currentTimeline = null;\r\n    }\r\n\r\n    // get all `V.Timelines` keys\r\n    var keys = Object.keys(V.Timelines);\r\n\r\n    for (var i = 0, iMax = keys.length; i < iMax; i++) {\r\n      // check that this key represents a timeline\r\n      if (V.Timelines[keys[i]].elementsSelector) {\r\n        // clear inline styles from timelines\r\n        TweenLite.set(V.Timelines[keys[i]].elementsSelector, {clearProps: 'all'});\r\n        V.Timelines[keys[i]].needsRebuild = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  resetTimelines();\r\n\r\n  // Add `activateTimelines()` to window resize event\r\n  var resetTimelinesDebounced = _.debounce(resetTimelines, 500);\r\n  window.addEventListener('resize', resetTimelinesDebounced);\r\n\r\n  /**\r\n   * Takes a function that builds a timeline, and adds it to\r\n   * the `V.Timeline` object as `V.Timeline[id]`. Also stores a\r\n   * query selector as `V.Timeline[id].pagesSelector`, targeting\r\n   * all pages that are part of the timeline, for example\r\n   * `'#page_1, #page_2'`, and `V.Timeline[id].elementsSelector`,\r\n   * targeting all elements that have tweens applied to them.\r\n   *\r\n   * @param  {string}   id - The timeline's ID.\r\n   * @param  {string}   pagesSelector - A query selector string.\r\n   * @param  {string}   elementsSelector - A query selector string.\r\n   * @param  {Function} builder - Adds tweens to the timeline.\r\n   *\r\n   */\r\n  function addTimeline(id, pagesSelector, elementsSelector, builder) {\r\n\r\n    // init timeline\r\n    var tl = new TimelineMax({paused: true});\r\n\r\n    // add to global object\r\n    V.Timelines[id] = tl;\r\n    V.Timelines[id].elementsSelector = elementsSelector;\r\n    V.Timelines[id].pagesSelector = pagesSelector;\r\n    V.Timelines[id].needsRebuild = true;\r\n\r\n    // tweens will be added to timeline on navigation (startNewTimeline)\r\n    V.Timelines[id].build = function buildTimeline() {\r\n      tl.clear();\r\n      builder.apply(tl);\r\n      V.Timelines[id].labelNames = getLabelNamesArray();\r\n    };\r\n\r\n    // get page IDs\r\n    var pageIds = pagesSelector.replace(/, /g, '').split('#');\r\n\r\n    // add timelineId property to each V.Pages[pageId]\r\n    for (var i = 0, iMax = pageIds.length; i < iMax; i++) {\r\n      if (pageIds[i]) {\r\n        V.Pages[pageIds[i]].timelineId = id;\r\n      }\r\n    }\r\n\r\n    function getLabelNamesArray() {\r\n      // get array of label names\r\n      var labelObjects = tl.getLabelsArray();\r\n      var keys = Object.keys(labelObjects);\r\n      var labelNames = [];\r\n\r\n      for (var i = 0, iMax = keys.length; i < iMax; i++) {\r\n        if (labelObjects[keys[i]].name) {\r\n          labelNames.push(labelObjects[keys[i]].name);\r\n        }\r\n      }\r\n\r\n      return labelNames;\r\n    }\r\n  }\r\n})(window.V);\r\n"]}